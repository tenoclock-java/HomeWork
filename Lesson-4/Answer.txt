1.Написать скрипт, который удаляет из текстового файла пустые строки и заменяет маленькие символы на большие (воспользуйтесь tr или sed).
	cat test | sed '/^$/d' | sed 's/./\U&/g' > sedresult
	cat test | tr -s '\n' | tr '[:lower:]' '[:upper:]' > trresult

2.Изменить скрипт мониторинга лога, используя утилиту tailf, чтобы он выводил сообщения при попытке неудачной аутентификации пользователя /var/log/auth.log, отслеживая сообщения примерно такого вида:
May 16 19:45:52 vlamp login[102782]: FAILED LOGIN (1) on '/dev/tty3' FOR 'user', Authentication failure
Проверить скрипт, выполнив ошибочную регистрацию с виртуального терминала.

	Авторизация SSH идет по ключам поэтому отслеживаются сообщения содержащие строку 'Invalid user'
	Скрипт loglogin.sh

3.Создать скрипт, который создаст директории для нескольких годов (2010 — 2017), в них — поддиректории для месяцев (от 01 до 12), и в каждый из них запишет несколько файлов с произвольными записями (например, 001.txt, содержащий текст«Файл 001», 002.txt с текстом Файл 002) и т. д.

	Скрипт mkfile.sh

4.*Создать файл crontab, который ежедневно регистрирует занятое каждым пользователем дисковое пространство в его домашней директории.

	Не очень понял задание, поэтому написал 2 варианта скрипта:
	Вариант 1 (foldersize.sh) записывает в /var/log/homesize.log дату и список папок с их размерами
	после этого установил запуск скрипта ежедневно командой sudo crontab -e
	0 1 * * * /scripts/foldersize.sh >/dev/null 2>&1
	Вариант 2 (foldersize2.sh) записывает дату и текущий размер домашней папки непосредственно в домашнюю директорию каждого пользователя в файл size.log.
	Запуск скрипта по расписанию раз в сутки осуществляется так же как и в первом варианте.

5.*Создать скрипт ownersort.sh, который в заданной папке копирует файлы в директории, названные по имени владельца каждого файла. Учтите, что файл должен принадлежать соответствующему владельцу. 

	Скрипт ownersort.sh содержит 2 функции, первая из которых проверяет всех уникальных владельцев файлов в каталоге и если директории нет создает ее.
	Вторая функция перебирает список файлов, копирует в нужную папку и выставляет правильного владельца на скопированный файл. Директория передается скрипту через аргумент запуска.